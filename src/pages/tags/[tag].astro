---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import getUniqueTags from "@utils/getUniqueTags";
import { slugifyPost } from "@utils/slugify";
import { SITE } from "@config";
import { filterPostsByTag, filterProjectsByTag } from "@utils/filterByTag";
import { sortItemsByDate } from "@utils/sortByDate";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const projects = await getCollection("portfolio");

  const tags = getUniqueTags([...posts, ...projects]);

  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;

const posts = await getCollection("blog", ({ data }) => !data.draft);
const taggedPosts = filterPostsByTag(posts, tag);

const projects = await getCollection("portfolio");
const taggedProjects = filterProjectsByTag(projects, tag);

const taggedItems = [...taggedPosts, ...taggedProjects];
const sortedTaggedItems = sortItemsByDate(taggedItems);
---

<Layout title={`Tag:${tag} | ${SITE.title}`}>
  <Header activeNav="tags" />
  <Main
    pageTitle={`Tag:${tag}`}
    pageDesc={`All the projects and posts with the tag "${tag}".`}
  >
    <ul>
      {
        sortedTaggedItems.map(({ data }) => (
          <Card href={`/posts/${slugifyPost(data)}`} frontmatter={data} />
        ))
      }
    </ul>
  </Main>
  <Footer />
</Layout>